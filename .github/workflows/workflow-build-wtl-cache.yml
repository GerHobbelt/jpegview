name: Reusable - Build/Upload WTL cached
# TODO later test and lint
# TODO test building library dependencies (the prebuilt stuff)



# GH Action Reusable Workflow -- https://docs.github.com/en/actions/using-workflows/reusing-workflows
on:
  workflow_call:
    inputs:
      platform-arch:
        required: true
        type: string
      build-config:
        required: true
        type: string



# NOTE: although WTL is now a submodule, this is not reflected in this GH action
#
# While I would like to do a submodule clone with checkout@v3, there's no option
# to check out only ONE submodule.  There's a lot of submodules in this project
# which are not directly required for building, and that seems fairly inefficient.
#
# Thus, the process below still caches the WTL source files from a specific release
# download.  This may not match the release version linked to the submodule.
#
# (Update referenced version as necessary)
#
# NOTE: This workflow may not be used in the future, but kept around for historical
# reasons (might need to use this cache routine in the future for other libs),
# or in case it is preferred to use this if the other breaks


jobs:
  build:
    # if windows-latest, might not find VS 2019
    runs-on: windows-2019


    env:
      # version of WTL to build with
      wtl-url: https://sourceforge.net/projects/wtl/files/WTL%2010/WTL%2010.0.10320%20Release/WTL10_10320_Release.zip/download
      # place it'll be extracted to, make this unique on new version changes, as it's used in cache
      wtl-folder: WTL10_10320_Release

    steps:
    - uses: actions/checkout@v3

    - name: setup-msbuild
      # https://github.com/marketplace/actions/setup-msbuild
      uses: microsoft/setup-msbuild@v1.1
      with:
        # Fixed on Visual Studio 2019 -- https://docs.microsoft.com/en-us/visualstudio/releases/2019/history
        vs-version: '[16.0,17.0)'
        msbuild-architecture: ${{ inputs.platform-arch }}

    # https://gist.github.com/hibearpanda/d5b5b58bd319132ffd7af606ffa333fc
    #  https://github.com/felixrieseberg/electron-wix-msi/issues/1#issuecomment-674598795
    #  https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#adding-a-system-path
    #  https://stackoverflow.com/a/64831469
    #  https://github.community/t/set-path-for-wix-toolset-in-windows-runner/154708
    - name: Set path for candle and light
      env:
        WIX_PATH: ${{ env.wix }}
      run: |
        #echo "$env:WIX_PATH\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        # https://github.community/t/set-path-for-wix-toolset-in-windows-runner/154708/3
        $env:Path += ";C:\Program Files (x86)\WiX Toolset v3.11\bin"
        echo "$PATH"
        # check that they're found
        where.exe candle.exe
        where.exe light.exe

    - name: Cache WTL
      # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
      uses: actions/cache@v3
      env:
        cache-name: cache-wtl
      with:
        # path where we would extract the WTL source files
        # NOTE: potential bug is that cache-name is not invalidated when wtl-url changes, which it should
        path: ${{ env.wtl-folder }}
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.wtl-folder }}

    # https://github.community/t/download-remote-file-in-github-actions/175417
    # https://support.moonpoint.com/os/windows/PowerShell/wget-curl.php
    - name: Download WTL if Needed
      run: |
        if ( Test-Path -Path "${{ env.wtl-folder }}" ) {
          echo "Cache found, not downloading"
        } else {
          echo "Need to Download"
          # https://stackoverflow.com/questions/69552662/how-to-download-a-file-from-sourceforge-using-powershell
          # if you don't use UserAgent, the whole file doesn't come out ...
          Invoke-WebRequest -UserAgent "Wget" -OutFile wtl.zip "${{ env.wtl-url }}"
          #Get-ChildItem
          7z x wtl.zip -o"${{ env.wtl-folder }}"
        }

    - name: Build Solution
      # didn't work for some reason
      #msbuild.exe /property:AdditionalIncludePaths="${{ env.wtl-folder }}\Include" /property:Platform=Win32 JPEGView.sln
      #msbuild.exe /property:IncludePath="${{ env.wtl-folder }}\Include" /property:Platform=Win32 JPEGView.sln
      # https://stackoverflow.com/questions/60516987/msbuild-2019-ignores-include-environment-variable
      run: |
        REM must be unquoted!
        SET IncludePath=%CD%\${{ env.wtl-folder }}\Include
        echo %IncludePath%
        msbuild.exe /property:Platform=${{ inputs.platform-arch }} /property:configuration="${{ inputs.build-config }}" src\JPEGView.sln

      shell: cmd
    - name: Upload Outputs
      uses: actions/upload-artifact@v3
      with:
        name: release-${{ inputs.platform-arch }}
        path: |
          src/JPEGView/bin
          src/JPEGView.Setup/bin
